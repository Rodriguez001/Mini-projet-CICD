# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: IA-Z Deploy

on:
  push:
    branches:
      - main
      
  pull_request:
    branches:
      - main
      
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: HelloWorld    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '18.x'                # set this to the node version to use

permissions:
  contents: read

jobs:
  rendering:
    name: Dynamic rendering
    runs-on: ubuntu-latest
    steps:
    # Checkout from main
    - name: Checkout current repository to Master branch
      uses: actions/checkout@v1
    # Setup Node version
    - name: Setup NodeJs 18.x
      uses: actions/setup-node@v1
      with:
        node-version: '18.x'
        
    # Cache the node_module to avoid build explosion
    - name: Cache dependencies and build outputs to improve workflow execution time.
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-js-${{ hashFiles('package-lock.json') }}
    # Install dependencies for dynamic rendering
    - name: Install dependencies
      run: npm install
        npm run build --if-present
        npm run test --if-present
    # Generate the README.md file
    - name: Generate README.md file
      run: node .github/dynamic-rendering/render.js
    - name: Commit and Push new README.md to the repository
      uses: actions-js/push@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: [rendering]
    name: Build
    runs-on: ubuntu-latest
    steps:
    # Checkout from main
    - uses: actions/checkout@v3
    # Set nodejs
    
    # Set the agent to run Python 3.10
    - uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    # Install prerequisites
    - name: Install requirements
      run: pip install -r requirements.txt
    # Build web project using jupyter-book
    - name: Build Jupyter-Book
      run: jupyter-book build .
    # Copy iframes where we want to have iframes
    - name: Copy iframes from compiled notebooks to website
      run: python .github/scripts/copy_iframes.py . docs/
    # Upload the artifact to be used in next job
    - uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: .

  deploy:
    name: Deploy
    permissions:
      contents: none
    runs-on: ubuntu-latest
    # Deploy only if build succeeded
    needs: [build]
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    # Deploy only if pull request has been pushed and merged or if triggered by scheduler
    if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}    
    steps:
    # Checkout from main
    - uses: actions/checkout@v3
      with:
        name: node-app
        path: .
    # Deploy it to Github pages
    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
